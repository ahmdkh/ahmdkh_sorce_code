/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca_server;
import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.*;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 1979
 */
public class Server extends javax.swing.JFrame {

    /**
     * Creates new form Server
     */
    static final String AB = "0123456789ABCDEFGHIJKL0123456789MNOPQRSTUVWXYZ";
static Random rnd = new Random();

    ResultSet rs;
    ResultSet rs1;
        Connection con;
        Statement sql;
        
    public Server() throws SQLException {
        initComponents();
        try {
           Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
           // Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:odbc:dbsql");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
       
           
                    
                             
            
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Generator Rc4 Keys");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update_ALLKeys");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String randomString( int len ){
   StringBuilder sb = new StringBuilder( len );
   for( int i = 0; i < len; i++ ) 
      sb.append( AB.charAt( rnd.nextInt(AB.length()) ) );
   return sb.toString();
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {        
            //Random generator = new Random(); 
            //            int i = generator.nextInt(9000) + 1000;
            //            //String is=String.valueOf(i);
            //            System.out.println(i);
                   
             
           String Rc4key= randomString(9);
             RSA r;
             boolean b=false;
                        sql=con.createStatement();
                         //JOptionPane.showMessageDialog(null,username+".."+password);
                        rs=sql.executeQuery("SELECT * FROM rsa_keys");
                        
                       // JOptionPane.showMessageDialog(null,"good_login");
                      //System.out.println("..............viwe");
                        while(rs.next())
                        {
                            String user=rs.getString("username").trim();
               try {
                   sql=con.createStatement();
                   rs1=sql.executeQuery("SELECT * FROM randomkeys where username = '"+user+"'");
               } catch (SQLException ex) {
                   Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                   b=true;
               }
                            if(b==true || rs1.next()!=true)
                            {
                                r=new RSA();
                            String pp=rs.getString("public_key").trim();
                            String rr=rs.getString("randomnumber").trim();
                             String st="";
                            st=r.RSAencrypt(Rc4key, pp,rr);
                         System.out.println("st="+st+"\t\tpp="+pp+"\t\trr"+rr+"\nrc4key="+st+"\n..............\n");
              PreparedStatement pss=con.prepareStatement("INSERT INTO randomkeys (username,randken) VALUES (?,?)");
              pss.setString(1,user);
              pss.setString(2,st);
              pss.executeUpdate();
              con.commit();
              b=false;
             
              
                            }
                        }
            
            //r.RSAencrypt(AB, AB, AB)
        } catch (SQLException ex) {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        RSA r=new RSA();
//        String a=r.RSAencrypt("M8CJ7U113", "29471", "33233");
//        System.out.print(a);
                try {        
            //Random generator = new Random(); 
            //            int i = generator.nextInt(9000) + 1000;
            //            //String is=String.valueOf(i);
            //            System.out.println(i);
                   
             
           String Rc4key= randomString(9);
             RSA r;
             boolean b=false;
                        sql=con.createStatement();
                         //JOptionPane.showMessageDialog(null,username+".."+password);
                        rs=sql.executeQuery("SELECT * FROM rsa_keys");
                        
                       // JOptionPane.showMessageDialog(null,"good_login");
                      //System.out.println("..............viwe");
                        while(rs.next())
                        {
                            String user=rs.getString("username").trim();
               try {
                   sql=con.createStatement();
                   rs1=sql.executeQuery("SELECT * FROM randomkeys where username = '"+user+"'");
               } catch (SQLException ex) {
                   Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                   b=true;
               }
                            if(b==true || rs1.next()!=true)
                            {
                                r=new RSA();
                            String pp=rs.getString("public_key").trim();
                            String rr=rs.getString("randomnumber").trim();
                             String st="";
                            st=r.RSAencrypt(Rc4key, pp,rr);
                         System.out.println("st="+st+"\t\tpp="+pp+"\t\trr"+rr+"\nrc4key="+st+"\n..............\n");
              PreparedStatement pss=con.prepareStatement("INSERT INTO randomkeys (username,randken) VALUES (?,?)");
              pss.setString(1,user);
              pss.setString(2,st);
              pss.executeUpdate();
              con.commit();
              b=false;
             
              
                            }
                            else
                            {
                                sql=con.createStatement();
                                 r=new RSA();
                            String pp=rs.getString("public_key").trim();
                            String rr=rs.getString("randomnumber").trim();
                             String st="";
                            st=r.RSAencrypt(Rc4key, pp,rr);
                         System.out.println("st="+st+"\t\tpp="+pp+"\t\trr"+rr+"\nrc4key="+st+"\n..............\n");
                         String sql2 = "UPDATE randomkeys "+"SET randken = '"+st+"' WHERE username='"+user+"'";
//              PreparedStatement pss=con.prepareStatement("INSERT INTO randomkeys (username,randken) VALUES (?,?)");
//              pss.setString(1,user);
//              pss.setString(2,st);
//              pss.executeUpdate();
              sql.executeUpdate(sql2);
              b=false;
                            }
                        }
            
            //r.RSAencrypt(AB, AB, AB)
        } catch (SQLException ex) {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Server().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    // End of variables declaration//GEN-END:variables
}
